{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/OpenMod.js","app.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","angular"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GC2CAK,QAAQD,OAAO,cAKfC,QAAQD,OAAO,uBACfC,QAAQD,OAAO,sBAAuB,+BCG3B","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","ï»¿\r\n\r\n//config.$inject = ['$routeProvider', '$locationProvider'];\r\n\r\n//function config($routeProvider, $locationProvider) {\r\n//    $routeProvider\r\n//        .when('/', {\r\n//            controller: 'HomeController',\r\n//            templateUrl: 'home/home.view.html',\r\n//            controllerAs: 'vm'\r\n//        })\r\n//        .when('/login', {\r\n//            controller: 'LoginController',\r\n//            templateUrl: 'login/login.view.html',\r\n//            controllerAs: 'vm'\r\n//        })\r\n//        .when('/register', {\r\n//            controller: 'RegisterController',\r\n//            templateUrl: 'register/register.view.html',\r\n//            controllerAs: 'vm'\r\n//        })\r\n//        .otherwise({redirectTo: '/login'});\r\n//}\r\n\r\n//run.$inject = ['$rootScope', '$location', '$cookieStore', '$http'];\r\n\r\n//function run($rootScope, $location, $cookieStore, $http) {\r\n//    // keep user logged in after page refresh\r\n//    $rootScope.globals = $cookieStore.get('globals') || {};\r\n//    if($rootScope.globals.currentUser) {\r\n//        $http.defaults.headers.common['Authorization'] = `Basic ${$rootScope.globals.currentUser.authdata}`;\r\n//    }\r\n\r\n//    $rootScope.$on('$locationChangeStart', function(event, next, current) {\r\n//        // redirect to login page if not logged in and trying to access a restricted page\r\n//        const restrictedPage = $.inArray($location.path(), ['/login', '/register']) === -1;\r\n//        const loggedIn = $rootScope.globals.currentUser;\r\n//        if(restrictedPage && !loggedIn) {\r\n//            $location.path('/login');\r\n//        }\r\n//    });\r\n//}\r\n\r\nangular.module('OpenMod', [])\r\n    //.config(config)\r\n    //.run(run)\r\n;\r\n\r\nangular.module('OpenMod.services', []);\r\nangular.module('OpenMod.components', ['OpenMod.services']);","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n\n//config.$inject = ['$routeProvider', '$locationProvider'];\n\n//function config($routeProvider, $locationProvider) {\n//    $routeProvider\n//        .when('/', {\n//            controller: 'HomeController',\n//            templateUrl: 'home/home.view.html',\n//            controllerAs: 'vm'\n//        })\n//        .when('/login', {\n//            controller: 'LoginController',\n//            templateUrl: 'login/login.view.html',\n//            controllerAs: 'vm'\n//        })\n//        .when('/register', {\n//            controller: 'RegisterController',\n//            templateUrl: 'register/register.view.html',\n//            controllerAs: 'vm'\n//        })\n//        .otherwise({redirectTo: '/login'});\n//}\n\n//run.$inject = ['$rootScope', '$location', '$cookieStore', '$http'];\n\n//function run($rootScope, $location, $cookieStore, $http) {\n//    // keep user logged in after page refresh\n//    $rootScope.globals = $cookieStore.get('globals') || {};\n//    if($rootScope.globals.currentUser) {\n//        $http.defaults.headers.common['Authorization'] = `Basic ${$rootScope.globals.currentUser.authdata}`;\n//    }\n\n//    $rootScope.$on('$locationChangeStart', function(event, next, current) {\n//        // redirect to login page if not logged in and trying to access a restricted page\n//        const restrictedPage = $.inArray($location.path(), ['/login', '/register']) === -1;\n//        const loggedIn = $rootScope.globals.currentUser;\n//        if(restrictedPage && !loggedIn) {\n//            $location.path('/login');\n//        }\n//    });\n//}\n\nangular.module('OpenMod', [])\n//.config(config)\n//.run(run)\n;\n\nangular.module('OpenMod.services', []);\nangular.module('OpenMod.components', ['OpenMod.services']);\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}